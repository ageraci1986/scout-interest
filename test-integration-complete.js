// Test script pour l'int√©gration compl√®te frontend/backend
const axios = require('axios');

async function testIntegrationComplete() {
  console.log('üéØ Test de l\'int√©gration compl√®te frontend/backend...\n');

  try {
    // Test 1: V√©rifier que le backend fonctionne
    console.log('1Ô∏è‚É£ Test du backend...');
    const backendHealth = await axios.get('http://localhost:3001/api/meta/ad-account');
    console.log('‚úÖ Backend OK:', backendHealth.data.data);

    // Test 2: Test de recherche de codes postaux
    console.log('\n2Ô∏è‚É£ Test de recherche de codes postaux...');
    const searchResponse = await axios.get('http://localhost:3001/api/meta/search-postal-codes', {
      params: {
        q: '10001',
        country_code: 'US',
        limit: 3
      }
    });
    console.log('‚úÖ Recherche codes postaux OK:', {
      query: searchResponse.data.data.query,
      results: searchResponse.data.data.results.length
    });

    // Test 3: Test reach estimate pour un code postal
    console.log('\n3Ô∏è‚É£ Test reach estimate pour un code postal...');
    const reachResponse = await axios.post('http://localhost:3001/api/meta/postal-code-reach-estimate-v2', {
      adAccountId: 'act_379481728925498',
      postalCode: '10001',
      targetingSpec: {
        country_code: 'US',
        age_min: 18,
        age_max: 65
      }
    });
    console.log('‚úÖ Reach estimate OK:', {
      postalCode: reachResponse.data.data.postalCode,
      audience: `${reachResponse.data.data.reachEstimate.users_lower_bound?.toLocaleString()} - ${reachResponse.data.data.reachEstimate.users_upper_bound?.toLocaleString()}`
    });

    // Test 4: Test batch processing
    console.log('\n4Ô∏è‚É£ Test batch processing...');
    const batchResponse = await axios.post('http://localhost:3001/api/meta/batch-postal-codes-reach-estimate-v2', {
      adAccountId: 'act_379481728925498',
      postalCodes: ['10001', '10002'],
      targetingSpec: {
        country_code: 'US',
        age_min: 18,
        age_max: 65
      }
    });
    console.log('‚úÖ Batch processing OK:', {
      totalProcessed: batchResponse.data.data.totalProcessed,
      successful: batchResponse.data.data.successful,
      errors: batchResponse.data.data.errors
    });

    // Test 5: Test avec un code postal fran√ßais
    console.log('\n5Ô∏è‚É£ Test avec un code postal fran√ßais...');
    const frenchResponse = await axios.post('http://localhost:3001/api/meta/postal-code-reach-estimate-v2', {
      adAccountId: 'act_379481728925498',
      postalCode: '75001',
      targetingSpec: {
        country_code: 'FR',
        age_min: 18,
        age_max: 65
      }
    });
    console.log('‚úÖ Code postal fran√ßais OK:', {
      postalCode: frenchResponse.data.data.postalCode,
      country: frenchResponse.data.data.zipCodeData.country_name,
      audience: `${frenchResponse.data.data.reachEstimate.users_lower_bound?.toLocaleString()} - ${frenchResponse.data.data.reachEstimate.users_upper_bound?.toLocaleString()}`
    });

    console.log('\nüéâ Tous les tests d\'int√©gration sont pass√©s avec succ√®s !');
    console.log('\nüìã R√©sum√© de l\'int√©gration :');
    console.log('1. ‚úÖ Backend op√©rationnel');
    console.log('2. ‚úÖ Recherche de codes postaux fonctionnelle');
    console.log('3. ‚úÖ Reach estimate individuel op√©rationnel');
    console.log('4. ‚úÖ Batch processing op√©rationnel');
    console.log('5. ‚úÖ Support multi-pays confirm√©');

    console.log('\nüöÄ L\'int√©gration est compl√®te et fonctionnelle !');
    console.log('\nüìñ Prochaines √©tapes :');
    console.log('1. Tester l\'interface utilisateur sur http://localhost:3000');
    console.log('2. Tester avec vos codes postaux upload√©s');
    console.log('3. Ajouter le support des int√©r√™ts combin√©s');
    console.log('4. Optimiser les performances pour de gros volumes');

  } catch (error) {
    console.error('‚ùå Erreur lors du test d\'int√©gration:', error.message);
    if (error.response) {
      console.error('Status:', error.response.status);
      console.error('Data:', error.response.data);
    }
  }
}

testIntegrationComplete();
