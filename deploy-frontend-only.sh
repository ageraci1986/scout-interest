#!/bin/bash

# üöÄ Script de D√©ploiement Frontend Vercel - Scout Interest
# D√©ploiement frontend uniquement avec configuration optimis√©e

set -e

echo "üöÄ D√©ploiement Frontend Vercel - Scout Interest"
echo "================================================"

# Couleurs pour les messages
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Fonction pour afficher les messages
log_info() {
    echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"
}

log_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

log_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

log_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

# V√©rifier les pr√©requis
check_prerequisites() {
    log_info "V√©rification des pr√©requis..."
    
    # V√©rifier Vercel CLI
    if ! command -v vercel &> /dev/null; then
        log_error "Vercel CLI n'est pas install√©"
        exit 1
    fi
    
    # V√©rifier Node.js
    if ! command -v node &> /dev/null; then
        log_error "Node.js n'est pas install√©"
        exit 1
    fi
    
    # V√©rifier npm
    if ! command -v npm &> /dev/null; then
        log_error "npm n'est pas install√©"
        exit 1
    fi
    
    log_success "Pr√©requis v√©rifi√©s"
}

# Pr√©parer le frontend
prepare_frontend() {
    log_info "Pr√©paration du frontend..."
    
    cd frontend
    
    # Installer les d√©pendances
    log_info "Installation des d√©pendances..."
    npm install
    
    # Tester le build
    log_info "Test du build optimis√©..."
    npm run build:vercel
    
    log_success "Frontend pr√™t pour le d√©ploiement"
    cd ..
}

# D√©ployer le frontend
deploy_frontend() {
    log_info "D√©ploiement du frontend sur Vercel..."
    
    # V√©rifier si on est connect√© √† Vercel
    if ! vercel whoami &> /dev/null; then
        log_info "Connexion √† Vercel..."
        vercel login
    fi
    
    # Sauvegarder la configuration actuelle
    log_info "Sauvegarde de la configuration actuelle..."
    cp vercel.json vercel.json.backup
    
    # Utiliser la configuration frontend uniquement
    log_info "Configuration pour d√©ploiement frontend uniquement..."
    cp vercel-frontend-only.json vercel.json
    
    # D√©ployer
    log_info "D√©ploiement en cours..."
    vercel --prod --name scout-interest-frontend
    
    # Restaurer la configuration
    log_info "Restauration de la configuration..."
    mv vercel.json.backup vercel.json
    
    log_success "D√©ploiement frontend termin√© !"
}

# Tester le d√©ploiement
test_deployment() {
    log_info "Test du d√©ploiement frontend..."
    
    log_info "URLs √† tester:"
    echo "- Frontend: https://scout-interest-frontend.vercel.app"
    echo "- Assets: https://scout-interest-frontend.vercel.app/static/*"
    echo ""
    
    log_info "Tests recommand√©s:"
    echo "1. Ouvrir l'URL du frontend dans un navigateur"
    echo "2. V√©rifier que l'interface se charge correctement"
    echo "3. V√©rifier que les assets (CSS/JS) se chargent"
    echo "4. Tester la navigation entre les pages"
}

# Fonction principale
main() {
    check_prerequisites
    
    prepare_frontend
    
    deploy_frontend
    
    test_deployment
    
    log_success "D√©ploiement frontend termin√© avec succ√®s !"
    echo ""
    echo "üìã Prochaines √©tapes :"
    echo "1. Testez l'interface frontend"
    echo "2. Configurez les variables d'environnement backend"
    echo "3. D√©ployez le backend s√©par√©ment"
    echo "4. Testez l'API compl√®te"
    echo ""
    echo "üåê Frontend: https://scout-interest-frontend.vercel.app"
}

# Ex√©cuter le script
main "$@"

