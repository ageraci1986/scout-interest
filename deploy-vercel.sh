#!/bin/bash

# üöÄ Script de D√©ploiement Vercel Optimis√© - Scout Interest
# Usage: ./deploy-vercel.sh [frontend|backend|both|full]

set -e

echo "üöÄ D√©marrage du d√©ploiement Vercel optimis√©..."

# Couleurs pour les messages
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Configuration du projet
PROJECT_NAME="scout-interest"
FRONTEND_DIR="frontend"
BACKEND_DIR="backend"

# Fonction pour afficher les messages
log_info() {
    echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"
}

log_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

log_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

log_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

# V√©rifier les pr√©requis
check_prerequisites() {
    log_info "V√©rification des pr√©requis..."
    
    # V√©rifier Vercel CLI
    if ! command -v vercel &> /dev/null; then
        log_error "Vercel CLI n'est pas install√©"
        log_info "Installation de Vercel CLI..."
        npm install -g vercel
    fi
    
    # V√©rifier Node.js
    if ! command -v node &> /dev/null; then
        log_error "Node.js n'est pas install√©"
        exit 1
    fi
    
    # V√©rifier npm
    if ! command -v npm &> /dev/null; then
        log_error "npm n'est pas install√©"
        exit 1
    fi
    
    log_success "Pr√©requis v√©rifi√©s"
}

# Pr√©parer le frontend
prepare_frontend() {
    log_info "Pr√©paration du frontend..."
    
    cd $FRONTEND_DIR
    
    # Installer les d√©pendances
    log_info "Installation des d√©pendances frontend..."
    npm install
    
    # Tester le build
    log_info "Test du build frontend..."
    npm run build:vercel
    
    log_success "Frontend pr√™t pour le d√©ploiement"
    cd ..
}

# Pr√©parer le backend
prepare_backend() {
    log_info "Pr√©paration du backend..."
    
    cd $BACKEND_DIR
    
    # Installer les d√©pendances de production
    log_info "Installation des d√©pendances backend..."
    npm run vercel-build
    
    log_success "Backend pr√™t pour le d√©ploiement"
    cd ..
}

# D√©ployer avec Vercel CLI
deploy_vercel() {
    log_info "D√©ploiement avec Vercel CLI..."
    
    # V√©rifier si on est connect√© √† Vercel
    if ! vercel whoami &> /dev/null; then
        log_info "Connexion √† Vercel..."
        vercel login
    fi
    
    # D√©ployer le projet
    log_info "D√©ploiement du projet: ${PROJECT_NAME}"
    vercel --prod --name ${PROJECT_NAME}
    
    log_success "D√©ploiement termin√© !"
}

# Configuration des variables d'environnement
setup_env_vars() {
    log_info "Configuration des variables d'environnement..."
    
    log_warning "IMPORTANT: Configurez ces variables dans Vercel:"
    echo ""
    echo "Variables REQUISES:"
    echo "DATABASE_URL=postgresql://postgres.wnugqzgzzwmebjjsfrns:[YOUR-PASSWORD]@aws-1-eu-west-3.pooler.supabase.com:5432/postgres"
    echo "META_APP_ID=votre_app_id"
    echo "META_APP_SECRET=votre_app_secret"
    echo "META_ACCESS_TOKEN=votre_access_token"
    echo "META_AD_ACCOUNT_ID=votre_ad_account_id"
    echo "JWT_SECRET=votre_jwt_secret"
    echo ""
    echo "Variables OPTIONNELLES:"
    echo "SUPABASE_URL=votre_supabase_url"
    echo "SUPABASE_ANON_KEY=votre_supabase_key"
    echo "CORS_ORIGIN=https://scout-interest.vercel.app"
    echo ""
}

# Test du d√©ploiement
test_deployment() {
    log_info "Test du d√©ploiement..."
    
    log_info "URLs √† tester:"
    echo "- Frontend: https://${PROJECT_NAME}.vercel.app"
    echo "- Backend API: https://${PROJECT_NAME}.vercel.app/api/health"
    echo "- Test Projects: https://${PROJECT_NAME}.vercel.app/api/test-projects"
    echo ""
    
    log_info "Tests recommand√©s:"
    echo "1. V√©rifier que l'interface se charge"
    echo "2. Tester l'endpoint /api/health"
    echo "3. V√©rifier la connexion √† Supabase"
    echo "4. Tester l'upload de fichiers"
}

# Fonction principale
main() {
    check_prerequisites
    
    case "${1:-full}" in
        "frontend")
            prepare_frontend
            ;;
        "backend")
            prepare_backend
            ;;
        "both")
            prepare_frontend
            prepare_backend
            ;;
        "full")
            prepare_frontend
            prepare_backend
            deploy_vercel
            setup_env_vars
            test_deployment
            ;;
        *)
            log_error "Usage: $0 [frontend|backend|both|full]"
            exit 1
            ;;
    esac
    
    log_success "Op√©ration termin√©e !"
    log_info "Prochaines √©tapes:"
    echo "1. Configurez les variables d'environnement dans Vercel"
    echo "2. Testez l'application d√©ploy√©e"
    echo "3. V√©rifiez les logs dans l'interface Vercel"
    echo "4. URL finale: https://${PROJECT_NAME}.vercel.app"
}

# Ex√©cuter le script
main "$@"

