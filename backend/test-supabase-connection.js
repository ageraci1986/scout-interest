const { Pool } = require('pg');

async function testSupabaseConnection() {
  console.log('üîç Testing Supabase connection with pooler URL...');
  
  // URL de test avec le pooler Supabase
  const testDatabaseUrl = 'postgresql://postgres.wnugqzgzzwmebjjsfrns:[YOUR-PASSWORD]@aws-1-eu-west-3.pooler.supabase.com:5432/postgres';
  
  console.log('üìã Testing URL format:', testDatabaseUrl.replace(/:[^:@]*@/, ':***@'));
  
  // Analyser l'URL de connexion
  try {
    const url = new URL(testDatabaseUrl);
    console.log('üîó Connection URL analysis:');
    console.log('- Protocol:', url.protocol);
    console.log('- Hostname:', url.hostname);
    console.log('- Port:', url.port);
    console.log('- Database:', url.pathname);
    console.log('- Username:', url.username);
    console.log('- Password:', url.password ? '***' : 'Not set');
  } catch (error) {
    console.error('‚ùå Invalid DATABASE_URL format:', error.message);
    return;
  }
  
  // Tester la r√©solution DNS
  const dns = require('dns').promises;
  try {
    const url = new URL(testDatabaseUrl);
    console.log('üåê Testing DNS resolution for:', url.hostname);
    const addresses = await dns.resolve4(url.hostname);
    console.log('‚úÖ DNS resolution successful:', addresses);
  } catch (error) {
    console.error('‚ùå DNS resolution failed:', error.message);
    return;
  }
  
  console.log('\nüí° Pour tester la connexion compl√®te, vous devez :');
  console.log('1. Remplacer [YOUR-PASSWORD] par votre vrai mot de passe Supabase');
  console.log('2. Ex√©cuter : DATABASE_URL="postgresql://postgres.wnugqzgzzwmebjjsfrns:VOTRE_MOT_DE_PASSE@aws-1-eu-west-3.pooler.supabase.com:5432/postgres" node test-supabase-connection.js');
  console.log('\nüîß Ou cr√©er un fichier .env avec :');
  console.log('DATABASE_URL=postgresql://postgres.wnugqzgzzwmebjjsfrns:VOTRE_MOT_DE_PASSE@aws-1-eu-west-3.pooler.supabase.com:5432/postgres');
}

// Ex√©cuter le test
testSupabaseConnection().catch(console.error);
