require('dotenv').config();
const metaApi = require('./src/config/meta-api');

async function testMetaConfig() {
  console.log('üîç Test de la configuration Meta API...\n');
  
  // V√©rifier les variables d'environnement
  console.log('üìã Variables d\'environnement:');
  console.log(`- META_APP_ID: ${process.env.META_APP_ID ? '‚úÖ Configur√©' : '‚ùå Manquant'}`);
  console.log(`- META_APP_SECRET: ${process.env.META_APP_SECRET ? '‚úÖ Configur√©' : '‚ùå Manquant'}`);
  console.log(`- META_ACCESS_TOKEN: ${process.env.META_ACCESS_TOKEN ? '‚úÖ Configur√©' : '‚ùå Manquant'}`);
  console.log(`- META_API_VERSION: ${process.env.META_API_VERSION || 'v18.0'}\n`);

  // Test de validation du token
  try {
    console.log('üîê Test de validation du token...');
    const tokenInfo = await metaApi.validateToken();
    console.log('‚úÖ Token valide:', tokenInfo);
  } catch (error) {
    console.log('‚ùå Erreur de validation du token:', error.message);
  }

  // Test de recherche d'int√©r√™ts
  try {
    console.log('\nüîç Test de recherche d\'int√©r√™ts...');
    const interests = await metaApi.searchInterests('fitness', 5);
    console.log('‚úÖ Recherche d\'int√©r√™ts r√©ussie:', interests.length, 'r√©sultats');
  } catch (error) {
    console.log('‚ùå Erreur de recherche d\'int√©r√™ts:', error.message);
  }

  // Test du rate limit
  try {
    console.log('\n‚è±Ô∏è Test du rate limit...');
    const rateLimit = await metaApi.getRateLimitStatus();
    console.log('‚úÖ Status du rate limit:', rateLimit);
  } catch (error) {
    console.log('‚ùå Erreur du rate limit:', error.message);
  }
}

if (require.main === module) {
  testMetaConfig()
    .then(() => {
      console.log('\n‚úÖ Test termin√©');
      process.exit(0);
    })
    .catch((error) => {
      console.error('\n‚ùå Erreur lors du test:', error);
      process.exit(1);
    });
}

module.exports = { testMetaConfig };
